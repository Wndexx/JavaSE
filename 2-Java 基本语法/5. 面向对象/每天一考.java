/*
	1. 面向对象思想编程内容的三条主线分别是什么？

		Java 类和类的成员：属性、方法、构造器；代码块(初始化块)、内部类

		面向对象的三大特征：封装性、继承性、多态性、（抽象性）

		其他关键字：this super static final abstract interface package import等

	2. 谈谈你对面向对象中类和对象的理解，并指出二者的关系

		类：对一类事物的描述，是抽象的、概念上的定义
		
		对象：是实际存在的该类事物的每个个体，因而也称为实例(instance)

		类实例化之后得到的就是对象

	3. 面向对象思想的体现一：类和对象的创建和执行操作有哪三步？

		类的创建

		类的实例化

		类中的结构的调用

	4. 画出如下代码在执行时内存分布情况

		class Car{
			String color = "red";
			int num = 4;
			void show() {
				int a = 10;
				System.out.println("color = " + color + ", num = " + num);
			}
		}

		class CarTest{
			public static void main(String[] args){

				Car c1 = new Car();
				Car c2 = new Car();

				c1.color = "blue";

				c1.show();
				c2.show();
			}
		}

	5. 类的方法内是否可以定义变量？是否可以调用属性？是否可以定义方法？是否可以调用方法？

		可以定义变量，局部变量

		可以调用属性

		不可以定义方法！！！

		可以调用方法

补充：
	
	JVM内存结构

		编译完源程序以后，生成一个或多个字节码文件。我们使用 JVM 中的类的加载器和解释器对生成的字节码文件进行解释运行。意味着，需要将字节码文件对应的类加载到内存中，涉及到内存解析

		虚拟机栈，即平时提到的栈结构，我们将局部变量存储在栈结构中

		堆，我们将 new 出来的结构（比如：数组、对象）加载在堆空间中。补充：对象的属性（非 static）加载在堆空间中

		方法区：类的加载信息、常量池、静态域


	回顾变量的分类

		方式一：按照数据类型

			1. 基本数据类型

				- 数值型

					- 整数类型 (byte、short、int、long)

					- 浮点类型 (float、doubt)

				- 字符型 (char)

				- 布尔型 (boolean)

			2. 引用数据类型

				- 类 (class)

				- 接口 (interface)

				- 数组 ([])

		方式二：按照在类中声明的位置

			1. 成员变量

				- 实例变量 (不以 static 修饰)

				- 类变量 (以 static 修饰)

			2. 局部变量

				- 形参 (方法、构造器中定义的变量)

				- 方法局部变量 (在方法内定义)

				- 代码块局部变量 (在代码块内定义)
*/