package com.wndexx.java;
/*
    排序算法

    排序：假设含有 n 个记录的序列为 {R1, R2, ..., Rn}，其相应的关键字序列为 {K1, K2, ..., Kn}
    	 将这些记录重新排序为 {Ri1, Ri2, ..., Rin}，使得相应的关键字满足条件 Ki1 <= Ki2 <= ... <= Kin
         这样的一种操作称为排序
         
    排序的目的：快速查找

    衡量排序算法的优劣：
     1. 时间复杂度：分析关键字的比较次数和记录的移动次数
     2. 空间复杂度：分析排序算法中需要多少辅助内存
     3. 稳定性：若两个记录 A 和 B 的关键字值相等，但排序后 A、B 的先后次序保持不变，则称这种排序算法是稳定的
     
    排序算法的分类：
     1. 内部排序：整个排序过程不需要借助于外部存储器（如磁盘等），所有排序操作都在内存中完成
     2. 外部排序：参与排序的数据非常多 ，数据量非常大，计算机无法把整个排序过程放在内存中完成，必须借助于外部存储器（如磁盘）。
               外部排序最常见的是 多路归并排序，可以认为外部排序是由多次内部排序组成。
               
    十大内部排序算法
     1. 选择排序：直接选择排序、堆排序
     2. 交换排序：冒泡排序、快速排序
     3. 插入排序：直接插入排序、折半插入排序、Shell排序（希尔排序）
     4. 归并排序
     5. 桶式排序
     6. 基数排序 

    算法的 5 大特征：
     1. 输入（Input）：有 0 个或多个输入数据，这些输入必须有清楚的描述和定义
     2. 输出（Output）：至少有 1 个或多个输出结果，不可以有输出结果
     3. 有穷性（有限性，Finiteness）：算法在有限的步骤之后会自动结束而不会无限循环，并且每一个步骤可以在可接受收的时间内完成
     4. 确定性（明确性，Definiteness）：算法中的每一步都有明确的含义，不会出现二义性
     5. 可行性（有效性，Effectiveness）：算法的每一步都是清除可行的，能让用户用纸笔计算而得出答案
 */
public class Sort {

}
